{"ast":null,"code":"import { convertToStandardNum, increment, findIncrementVal, decrement, roundTimeDown, findProportionalTimeDif } from '../StartEndTimeComp/helperFunc';\nimport { convertToMilitary } from '../../Agenda_Helper';\nexport function convertToAgendaFormat(data) {\n  if (data.length > 0) {\n    const sortedData = sortByStartTime(data);\n    const incCt = 4;\n    const intervalDivider = 50;\n    const firstEvent = decrement(5, roundTimeDown(sortedData[0].time.start), true);\n    const lastEvent = increment(5, roundTimeDown(sortedData[sortedData.length - 1].time.end), true);\n    const timeDif = findProportionalTimeDif(firstEvent, lastEvent);\n    const intervals = Math.ceil(timeDif / intervalDivider) + 1;\n    const firstEvent_stdNum = convertToStandardNum(convertToMilitary(firstEvent));\n    let arr = [];\n    let timeInc = firstEvent;\n\n    for (let i = 0; i < intervals; i++) {\n      const currentTimeInt = [intervalDivider * i + firstEvent_stdNum, intervalDivider * (i + 1) + firstEvent_stdNum - 1];\n      let weekArr = [];\n\n      for (let i = 0; i < sortedData[0].daysOfWeek.length; i++) {\n        let dayArr = [];\n        sortedData.forEach(function (o) {\n          const timeEvent_stdNum = convertToStandardNum(convertToMilitary(o.time.start));\n\n          if (currentTimeInt[0] <= timeEvent_stdNum && timeEvent_stdNum <= currentTimeInt[1] && o.daysOfWeek[i]) {\n            dayArr.push(o);\n          }\n        });\n        weekArr.push(dayArr);\n      }\n\n      arr.push({\n        time: timeInc,\n        weekArr: weekArr\n      });\n      timeInc = increment(incCt, timeInc, true);\n    }\n\n    return arr;\n  } else {\n    return null;\n  }\n}\n\nfunction sortByStartTime(arr) {\n  let sortedArr = arr;\n\n  for (let i = 0; i < sortedArr.length; i++) {\n    const timeVal = convertToMilitary(sortedArr[i].time.start);\n\n    for (let j = 0; j < sortedArr.length; j++) {\n      const relTimeVal = convertToMilitary(sortedArr[j].time.start);\n\n      if (timeVal < relTimeVal) {\n        const temp = sortedArr[i];\n        sortedArr[i] = sortedArr[j];\n        sortedArr[j] = temp;\n      }\n    }\n  }\n\n  return sortedArr;\n}","map":{"version":3,"sources":["/Users/keefergregoire/Documents/profecient_v2/frontend/src/Semester Creator/SevenDayAgenda/helperFunc.js"],"names":["convertToStandardNum","increment","findIncrementVal","decrement","roundTimeDown","findProportionalTimeDif","convertToMilitary","convertToAgendaFormat","data","length","sortedData","sortByStartTime","incCt","intervalDivider","firstEvent","time","start","lastEvent","end","timeDif","intervals","Math","ceil","firstEvent_stdNum","arr","timeInc","i","currentTimeInt","weekArr","daysOfWeek","dayArr","forEach","o","timeEvent_stdNum","push","sortedArr","timeVal","j","relTimeVal","temp"],"mappings":"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","sourcesContent":["import {convertToStandardNum, increment, findIncrementVal, decrement, roundTimeDown, findProportionalTimeDif} from '../StartEndTimeComp/helperFunc';\nimport {convertToMilitary} from '../../Agenda_Helper';\n\nexport function convertToAgendaFormat(data){\n\tif(data.length >0){\n\t\tconst sortedData = sortByStartTime(data);\n\t\t\n\t\tconst incCt =4;\n\t\tconst intervalDivider = 50;\n\n\n\t\tconst firstEvent = decrement(5,roundTimeDown(sortedData[0].time.start), true);\n\t\tconst lastEvent = increment(5,roundTimeDown(sortedData[sortedData.length-1].time.end), true);\n\t\tconst timeDif = findProportionalTimeDif(firstEvent, lastEvent );\n\t\tconst intervals = Math.ceil(timeDif/intervalDivider) + 1;\n\t\tconst firstEvent_stdNum = convertToStandardNum(convertToMilitary(firstEvent));\n\n\t\tlet arr = []\n\t\t\n\t\tlet timeInc = firstEvent;\n\t\tfor(let i =0; i < intervals; i++){\n\t\t\tconst currentTimeInt = [intervalDivider * i + firstEvent_stdNum, intervalDivider * (i+1) + firstEvent_stdNum-1];\n\n\t\t\tlet weekArr = []\n\t\t\t\tfor(let i =0; i<sortedData[0].daysOfWeek.length; i++){\n\t\t\t\t\tlet dayArr = [];\n\t\t\t\t\tsortedData.forEach(function(o){\n\t\t\t\t\t\tconst timeEvent_stdNum = convertToStandardNum(convertToMilitary(o.time.start));\n\t\t\t\t\t\tif(currentTimeInt[0] <= timeEvent_stdNum && timeEvent_stdNum <= currentTimeInt[1] && o.daysOfWeek[i]){\n\t\t\t\t\t\t\tdayArr.push(o);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tweekArr.push(dayArr);\n\t\t\t\t}\n\t\t\tarr.push({time: timeInc, weekArr: weekArr});\n\t\t\ttimeInc = increment(incCt, timeInc, true);\n\t\t}\n\n\t\treturn arr;\n\t}else{\n\t\treturn null;\n\t}\n}\n\nfunction sortByStartTime(arr){\n\tlet sortedArr = arr;\n\n\tfor(let i =0; i <sortedArr.length; i++){\n\t\tconst timeVal = convertToMilitary(sortedArr[i].time.start);\n\n\t\tfor(let j =0; j< sortedArr.length; j++){\n\t\t\tconst relTimeVal = convertToMilitary(sortedArr[j].time.start);\n\n\t\t\tif(timeVal < relTimeVal){\n\t\t\t\tconst temp = sortedArr[i];\n\t\t\t\tsortedArr[i] = sortedArr[j];\n\t\t\t\tsortedArr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn sortedArr;\n\n}"]},"metadata":{},"sourceType":"module"}
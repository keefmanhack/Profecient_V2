{"ast":null,"code":"export function findTopPosition(start) {\n  const startMT = convertToMilitary(start);\n  const startHour = parseInt((startMT + '').substring(0, (startMT + '').length - 2)) * 100;\n  const startMinute = parseInt((startMT + '').substring((startMT + '').length - 2, (startMT + '').length));\n  const timeInDay = 2400;\n  const agendaLength = 48 * 25;\n  const convertMin = startMinute / 60 * 100;\n\n  if (startHour) {\n    return (startHour + convertMin) / 2400 * agendaLength + 17;\n  } else {\n    return convertMin / 2400 * agendaLength + 17;\n  }\n}\nexport function findHeightProportion(start, end) {\n  const startMT = convertToMilitary(start);\n  const endMT = convertToMilitary(end);\n  return (endMT - startMT) / 100 * 50;\n}\nexport function convertToMilitary(stdTime) {\n  // console.log(stdTime);\n  const minute = parseInt(stdTime.substring(stdTime.length - 4, stdTime.length - 2));\n  const hour = parseInt(stdTime.substring(0, stdTime.length - 5));\n  console.log(minute);\n  console.log(hour);\n\n  if (stdTime.includes('PM') && hour === 12) {\n    return hour * 100 + minute;\n  } else if (stdTime.includes('PM')) {\n    return hour * 100 + minute + 1200;\n  } else if (hour === 12) {\n    return minute;\n  } else {\n    return hour * 100 + minute;\n  }\n}\nexport function convertToStandard(mtTime) {\n  let mtTimeStr = mtTime + ''; // console.log(mtTimeStr);\n\n  if (mtTime > 2359) {\n    return '11:59PM';\n  } else if (mtTime < 0) {\n    return '12:01AM';\n  } else {\n    if (mtTimeStr.length > 3) {\n      const minute = mtTimeStr.substring(mtTimeStr.length - 2, mtTimeStr.length);\n\n      if (mtTime < 1200) {\n        const hour = mtTimeStr.substring(0, 2);\n        return hour + ':' + minute + 'AM';\n      } else if (mtTime < 2200) {\n        const hour = (mtTime - 1200 + '').substring(0, 1);\n        return hour + ':' + minute + 'PM';\n      }\n    } else if (mtTimeStr.length > 2) {\n      const minute = mtTimeStr.substring(mtTimeStr.length - 2, mtTimeStr.length);\n      const hour = mtTimeStr.substring(0, 1);\n      return hour + ':' + minute + 'AM';\n    } else if (mtTimeStr.length > 1) {\n      return '12:' + mtTimeStr + 'AM';\n    } else if (mtTimeStr.length > 0) {\n      return '12:' + '0' + mtTimeStr + 'AM';\n    } else {\n      return null;\n    }\n\n    return '10:10AM';\n  }\n}","map":{"version":3,"sources":["/Users/keefergregoire/Documents/profecient_v2/src/Agenda_Helper.js"],"names":["findTopPosition","start","startMT","convertToMilitary","startHour","parseInt","substring","length","startMinute","timeInDay","agendaLength","convertMin","findHeightProportion","end","endMT","stdTime","minute","hour","console","log","includes","convertToStandard","mtTime","mtTimeStr"],"mappings":"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","sourcesContent":["export function findTopPosition(start){\n\tconst startMT = convertToMilitary(start);\n\tconst startHour = parseInt((startMT+ '').substring(0, (startMT+'').length-2)) * 100;\n\tconst startMinute = parseInt((startMT+ '').substring((startMT+ '').length-2, (startMT + '').length));\n\n\tconst timeInDay = 2400;\n\tconst agendaLength = 48 * 25;\n\tconst convertMin = (startMinute/60)*100\n\n\n\tif (startHour){\n\t\treturn (((startHour+convertMin)/2400)* agendaLength) + 17\n\t}else{\n\t\treturn ((convertMin/2400)* agendaLength) + 17\n\t}\n}\n\nexport function findHeightProportion(start, end){\n\tconst startMT = convertToMilitary(start);\n\tconst endMT = convertToMilitary(end);\n\n\treturn (endMT - startMT)/100 * 50;\n}\n\nexport function convertToMilitary(stdTime){\n\t// console.log(stdTime);\n\tconst minute = parseInt(stdTime.substring(stdTime.length-4 ,stdTime.length-2));\n\tconst hour = parseInt(stdTime.substring(0 ,stdTime.length-5));\n\tconsole.log(minute);\n\tconsole.log(hour)\n\n\tif(stdTime.includes('PM') && hour === 12){\n\t\treturn (hour*100 + minute)\n\t}else if(stdTime.includes('PM')){\n\t\treturn (hour * 100 + minute) + 1200;\n\t}else if(hour === 12){\n\t\treturn minute; \n\t}else{\n\t\treturn hour * 100 + minute;\n\t}\n}\n\nexport function convertToStandard(mtTime){\n\tlet mtTimeStr = mtTime + '';\n\t// console.log(mtTimeStr);\n\tif(mtTime > 2359){\n\t\treturn '11:59PM';\n\t}else if(mtTime < 0){\n\t\treturn '12:01AM';\n\t}else{\n\t\tif(mtTimeStr.length >3){\n\t\t\tconst minute = mtTimeStr.substring(mtTimeStr.length-2, mtTimeStr.length);\n\t\t\tif(mtTime < 1200){\n\t\t\t\tconst hour = mtTimeStr.substring(0, 2);\n\t\t\t\treturn hour + ':'  + minute + 'AM'; \n\t\t\t}else if(mtTime < 2200){\n\t\t\t\tconst hour = ((mtTime-1200) + '').substring(0,1);\n\t\t\t\treturn hour + ':'  + minute + 'PM';\n\t\t\t}\n\t\t}else if(mtTimeStr.length > 2){\n\t\t\tconst minute = mtTimeStr.substring(mtTimeStr.length-2, mtTimeStr.length);\n\t\t\tconst hour = mtTimeStr.substring(0, 1);\n\t\t\treturn hour + ':'  + minute + 'AM';\n\t\t}else if(mtTimeStr.length>1){\n\t\t\treturn '12:' + mtTimeStr + 'AM';\n\t\t}else if(mtTimeStr.length>0){\n\t\t\treturn '12:' + '0' + mtTimeStr + 'AM'; \n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t\treturn '10:10AM'\n\t}\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { convertToStandardNum, increment, findIncrementVal, decrement, roundTimeDown, findProportionalTimeDif } from '../StartEndTimeComp/helperFunc';\nimport { convertToMilitary } from '../../Agenda_Helper';\nexport function convertToAgendaFormat(data) {\n  const sortedData = sortByStartTime(data);\n  const incCt = 4;\n  const intervalDivider = 50;\n  const firstEvent = decrement(5, roundTimeDown(sortedData[0].time.start), true);\n  const lastEvent = increment(5, roundTimeDown(sortedData[sortedData.length - 1].time.end), true);\n  const timeDif = findProportionalTimeDif(firstEvent, lastEvent);\n  const intervals = Math.ceil(timeDif / intervalDivider) + 1;\n  const firstEvent_stdNum = convertToStandardNum(convertToMilitary(firstEvent));\n  let arr = [];\n  let timeInc = firstEvent;\n\n  for (let i = 0; i < intervals; i++) {\n    const currentTimeInt = [intervalDivider * i + firstEvent_stdNum, intervalDivider * (i + 1) + firstEvent_stdNum - 1];\n    let weekArr = [];\n\n    for (let i = 0; i < sortedData[0].daysOfWeek.length; i++) {\n      let dayArr = [];\n      sortedData.forEach(function (o) {\n        const timeEvent_stdNum = convertToStandardNum(convertToMilitary(o.time.start));\n\n        if (currentTimeInt[0] <= timeEvent_stdNum && timeEvent_stdNum <= currentTimeInt[1] && o.daysOfWeek[day]) {\n          dayArr.push(o);\n        }\n      });\n      weekArr.push(dayArr);\n    }\n\n    arr.push({\n      time: timeInc,\n      weekArr: weekArr\n    });\n    timeInc = increment(incCt, timeInc, true);\n  }\n\n  return arr;\n}\n\nfunction sortByStartTime(arr) {\n  let sortedArr = arr;\n\n  for (let i = 0; i < sortedArr.length; i++) {\n    const timeVal = convertToMilitary(sortedArr[i].time.start);\n\n    for (let j = 0; j < sortedArr.length; j++) {\n      const relTimeVal = convertToMilitary(sortedArr[j].time.start);\n\n      if (timeVal < relTimeVal) {\n        const temp = sortedArr[i];\n        sortedArr[i] = sortedArr[j];\n        sortedArr[j] = temp;\n      }\n    }\n  }\n\n  return sortedArr;\n}","map":{"version":3,"sources":["/Users/keefergregoire/Documents/profecient_v2/src/Semester Creator/SevenDayAgenda/helperFunc.js"],"names":["convertToStandardNum","increment","findIncrementVal","decrement","roundTimeDown","findProportionalTimeDif","convertToMilitary","convertToAgendaFormat","data","sortedData","sortByStartTime","incCt","intervalDivider","firstEvent","time","start","lastEvent","length","end","timeDif","intervals","Math","ceil","firstEvent_stdNum","arr","timeInc","i","currentTimeInt","weekArr","daysOfWeek","dayArr","forEach","o","timeEvent_stdNum","day","push","sortedArr","timeVal","j","relTimeVal","temp"],"mappings":"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","sourcesContent":["import {convertToStandardNum, increment, findIncrementVal, decrement, roundTimeDown, findProportionalTimeDif} from '../StartEndTimeComp/helperFunc';\nimport {convertToMilitary} from '../../Agenda_Helper';\n\nexport function convertToAgendaFormat(data){\n\tconst sortedData = sortByStartTime(data);\n\t\n\tconst incCt =4;\n\tconst intervalDivider = 50;\n\n\n\tconst firstEvent = decrement(5,roundTimeDown(sortedData[0].time.start), true);\n\tconst lastEvent = increment(5,roundTimeDown(sortedData[sortedData.length-1].time.end), true);\n\tconst timeDif = findProportionalTimeDif(firstEvent, lastEvent );\n\tconst intervals = Math.ceil(timeDif/intervalDivider) + 1;\n\tconst firstEvent_stdNum = convertToStandardNum(convertToMilitary(firstEvent));\n\n\tlet arr = []\n\t\n\tlet timeInc = firstEvent;\n\tfor(let i =0; i < intervals; i++){\n\t\tconst currentTimeInt = [intervalDivider * i + firstEvent_stdNum, intervalDivider * (i+1) + firstEvent_stdNum-1];\n\n\t\tlet weekArr = []\n\t\t\tfor(let i =0; i<sortedData[0].daysOfWeek.length; i++){\n\t\t\t\tlet dayArr = [];\n\t\t\t\tsortedData.forEach(function(o){\n\t\t\t\t\tconst timeEvent_stdNum = convertToStandardNum(convertToMilitary(o.time.start));\n\t\t\t\t\tif(currentTimeInt[0] <= timeEvent_stdNum && timeEvent_stdNum <= currentTimeInt[1] && o.daysOfWeek[day]){\n\t\t\t\t\t\tdayArr.push(o);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tweekArr.push(dayArr);\n\t\t\t}\n\t\tarr.push({time: timeInc, weekArr: weekArr});\n\t\ttimeInc = increment(incCt, timeInc, true);\n\t}\n\n\treturn arr;\n}\n\nfunction sortByStartTime(arr){\n\tlet sortedArr = arr;\n\n\tfor(let i =0; i <sortedArr.length; i++){\n\t\tconst timeVal = convertToMilitary(sortedArr[i].time.start);\n\n\t\tfor(let j =0; j< sortedArr.length; j++){\n\t\t\tconst relTimeVal = convertToMilitary(sortedArr[j].time.start);\n\n\t\t\tif(timeVal < relTimeVal){\n\t\t\t\tconst temp = sortedArr[i];\n\t\t\t\tsortedArr[i] = sortedArr[j];\n\t\t\t\tsortedArr[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn sortedArr;\n\n}"]},"metadata":{},"sourceType":"module"}